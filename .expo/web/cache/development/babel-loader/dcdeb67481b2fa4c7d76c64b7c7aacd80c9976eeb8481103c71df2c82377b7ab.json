{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar __ReactNativeView = require('react-native').View;\nvar __ReactNativeText = require('react-native').Text;\nimport React, { useState, useEffect } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { ListItem, Theme, XStack } from 'tamagui';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Image } from 'expo-image';\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { Audio } from 'expo-av';\nimport { setSong, setIsPlaying } from \"../features/songs/songSlice\";\nimport { Mutex } from 'async-mutex';\nimport { addFav, removeFav } from \"../features/favs/favsSlice\";\nimport { useFonts } from \"expo-font\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function SongSelected(_ref) {\n  var navigation = _ref.navigation;\n  var _useFonts = useFonts({\n      Inter: require('@tamagui/font-inter/otf/Inter-Medium.otf'),\n      InterBold: require('@tamagui/font-inter/otf/Inter-Bold.otf')\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    loaded = _useFonts2[0];\n  var mutex = new Mutex();\n  var favSongs = useSelector(function (state) {\n    return state.favs.favs;\n  });\n  var songSelected = useSelector(function (state) {\n    return state.songs.songSelected;\n  });\n  var isPlaying = useSelector(function (state) {\n    return state.songs.isPlaying;\n  });\n  var songPlayed = useSelector(function (state) {\n    return state.songs.songPlayed;\n  });\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    localSong = _useState2[0],\n    setLocalSong = _useState2[1];\n  var dispatch = useDispatch();\n  var loadAudio = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      yield mutex.runExclusive(_asyncToGenerator(function* () {\n        dispatch(setIsPlaying(false));\n        var _yield$Audio$Sound$cr = yield Audio.Sound.createAsync({\n            uri: songSelected.previewUrl\n          }, {\n            shouldPlay: false\n          }, function (status) {\n            if (status.didJustFinish) {\n              console.log(\"se esta pausando\");\n              dispatch(setIsPlaying(false));\n              sound.pauseAsync();\n              sound.setPositionAsync(0);\n            }\n          }),\n          sound = _yield$Audio$Sound$cr.sound;\n        dispatch(setSong(sound));\n        localSong.push(sound);\n      }));\n    });\n    return function loadAudio() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    console.log('reproduciendo: ' + songSelected.trackName);\n    loadAudio();\n    return _asyncToGenerator(function* () {\n      yield mutex.runExclusive(_asyncToGenerator(function* () {\n        localSong.forEach(function (elem) {\n          elem.unloadAsync();\n        });\n        setLocalSong([]);\n      }));\n    });\n  }, [songSelected]);\n  useEffect(function () {\n    playPauseAudio();\n  }, [songPlayed]);\n  var playPauseAudio = function () {\n    var _ref6 = _asyncToGenerator(function* () {\n      yield mutex.runExclusive(_asyncToGenerator(function* () {\n        try {\n          var status = yield songPlayed.getStatusAsync();\n          if (songPlayed && status.isLoaded) {\n            if (status.isPlaying) {\n              yield songPlayed.pauseAsync();\n            } else {\n              yield songPlayed.playAsync();\n            }\n            dispatch(setIsPlaying(!isPlaying));\n          }\n        } catch (error) {\n          console.log(error);\n        }\n      }));\n    });\n    return function playPauseAudio() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var nameIcon = isPlaying ? 'pause' : 'play';\n  var isFav = favSongs.some(function (song) {\n    return song.trackId === songSelected.trackId;\n  });\n  var nameFav = isFav ? 'heart' : 'heart-outline';\n  var pressFav = function pressFav() {\n    isFav ? dispatch(removeFav(songSelected)) : dispatch(addFav(songSelected));\n  };\n  return loaded ? _jsx(Theme, {\n    name: \"blue\",\n    children: _jsx(ListItem, {\n      style: {\n        position: 'absolute',\n        bottom: 60\n      },\n      hoverTheme: true,\n      pressTheme: true,\n      onPress: function onPress(_) {\n        return navigation.navigate('SongSelected');\n      },\n      icon: _jsx(Image, {\n        source: {\n          uri: songSelected.artworkUrl60\n        },\n        style: {\n          width: 60,\n          height: 60\n        }\n      }),\n      iconAfter: _jsxs(XStack, {\n        space: true,\n        children: [_jsx(TouchableOpacity, {\n          onPress: pressFav,\n          children: _jsx(Icon, {\n            name: nameFav,\n            size: 40,\n            color: \"gray\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: playPauseAudio,\n          children: _jsx(Icon, {\n            name: nameIcon,\n            size: 40,\n            color: \"gray\"\n          })\n        })]\n      }),\n      title: songSelected.trackName,\n      subTitle: songSelected.artistName\n    })\n  }) : null;\n}\nexport default SongSelected;","map":{"version":3,"names":["React","useState","useEffect","TouchableOpacity","ListItem","Theme","XStack","useSelector","useDispatch","Image","Icon","Audio","setSong","setIsPlaying","Mutex","addFav","removeFav","useFonts","jsx","_jsx","jsxs","_jsxs","SongSelected","_ref","navigation","_useFonts","Inter","require","InterBold","_useFonts2","_slicedToArray","loaded","mutex","favSongs","state","favs","songSelected","songs","isPlaying","songPlayed","_useState","_useState2","localSong","setLocalSong","dispatch","loadAudio","_ref2","_asyncToGenerator","runExclusive","_yield$Audio$Sound$cr","Sound","createAsync","uri","previewUrl","shouldPlay","status","didJustFinish","console","log","sound","pauseAsync","setPositionAsync","push","apply","arguments","trackName","forEach","elem","unloadAsync","playPauseAudio","_ref6","getStatusAsync","isLoaded","playAsync","error","nameIcon","isFav","some","song","trackId","nameFav","pressFav","name","children","style","position","bottom","hoverTheme","pressTheme","onPress","_","navigate","icon","source","artworkUrl60","width","height","iconAfter","space","size","color","title","subTitle","artistName"],"sources":["/Users/juanfer14/Public/itunes-edamm/components/SongSelected.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport { TouchableOpacity} from 'react-native';\n\nimport { ListItem, Theme, XStack } from 'tamagui'\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { Image } from 'expo-image';\n\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\n\nimport { Audio } from 'expo-av'\n\nimport { setSong, setIsPlaying } from '../features/songs/songSlice';\n\nimport { Mutex } from 'async-mutex';\n\nimport { addFav, removeFav } from '../features/favs/favsSlice';\n\n// Importo fonts para tamagui\nimport { useFonts } from \"expo-font\";\n\n\n\n\nexport function SongSelected({ navigation }){\n\n    const [loaded] = useFonts({\n        Inter: require('@tamagui/font-inter/otf/Inter-Medium.otf'),\n        InterBold: require('@tamagui/font-inter/otf/Inter-Bold.otf'),\n    });\n\n    \n\n    const mutex = new Mutex();\n\n    const favSongs = useSelector(state => state.favs.favs);\n    const songSelected = useSelector(state => state.songs.songSelected)\n    const isPlaying = useSelector(state => state.songs.isPlaying);\n    const songPlayed = useSelector(state => state.songs.songPlayed)\n\n    const [localSong, setLocalSong] = useState([]);\n\n    \n    // Dispatcher para ejecutar acciones de las stores\n    const dispatch = useDispatch();\n\n    const loadAudio = async () => {\n        await mutex.runExclusive(async () => {\n                dispatch(setIsPlaying(false))\n\n                    \n                const { sound } = await Audio.Sound.createAsync(\n                    { uri: songSelected.previewUrl },\n                    { shouldPlay: false },\n                    (status) => {\n                        if(status.didJustFinish){\n                            console.log(\"se esta pausando\")\n                            dispatch(setIsPlaying(false));\n                            sound.pauseAsync();\n                            sound.setPositionAsync(0);\n                        }\n                        \n                        \n                    }\n                );\n                \n                dispatch(setSong(sound))\n                localSong.push(sound); \n        })  \n    }\n\n    useEffect(() => {\n        // Limpiar el sonido cuando el componente se desmonta\n        console.log('reproduciendo: ' + songSelected.trackName);           \n        loadAudio();\n        return async () => {\n            await mutex.runExclusive(async () => {\n                localSong.forEach((elem) => {elem.unloadAsync()})\n                setLocalSong([]);\n            })\n        }\n      }, [songSelected]);\n\n\n      useEffect(() => {\n        playPauseAudio();\n      }, [songPlayed])\n\n      \n\n\n    const playPauseAudio = async () => {\n        await mutex.runExclusive(async () => {\n            try {\n                const status = await songPlayed.getStatusAsync();\n                if (songPlayed && status.isLoaded) {\n                    if (status.isPlaying) {\n                        await songPlayed.pauseAsync();\n                    } else {\n                        await songPlayed.playAsync();\n                    }\n                    dispatch(setIsPlaying(!isPlaying));\n                }\n            }\n            catch(error){console.log(error)}\n        })\n        \n        \n    };\n\n    const nameIcon = isPlaying ? 'pause' : 'play'\n\n    const isFav = favSongs.some(song => song.trackId === songSelected.trackId);\n\n    const nameFav = isFav ? 'heart' : 'heart-outline'\n\n    const pressFav = () => { isFav ? dispatch(removeFav(songSelected)) : dispatch(addFav(songSelected)) }\n\n    return (\n        loaded ?\n            <Theme name=\"blue\">\n                <ListItem\n                    style={{position: 'absolute', bottom: 60}}\n                    hoverTheme\n                    pressTheme\n                    onPress={_ => navigation.navigate('SongSelected')}\n                    icon={<Image source={{uri: songSelected.artworkUrl60}} style={{ width: 60, height: 60 }} />}\n                    iconAfter={\n                        <XStack space>\n                            <TouchableOpacity onPress={pressFav}>\n                                <Icon name={nameFav} size={40} color=\"gray\" />\n                            </TouchableOpacity> \n                            <TouchableOpacity onPress={playPauseAudio}>\n                                <Icon name={nameIcon}  size={40} color=\"gray\" />\n                            </TouchableOpacity>\n                        </XStack>\n                    }\n                    title={songSelected.trackName}\n                    subTitle={songSelected.artistName}\n                />\n            </Theme>\n         : null\n    )\n\n}\n\nexport default SongSelected;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}