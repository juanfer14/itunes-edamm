{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useEffect } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport useColorScheme from \"react-native-web/dist/exports/useColorScheme\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { StatusBar } from 'expo-status-bar';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toggle, setTheme } from \"./features/styles/themeSlice\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { Ionicons } from '@expo/vector-icons';\nimport { DiscoverScreen } from \"./components/DiscoverScreen\";\nimport { Favs } from \"./components/Favs\";\nimport { Switch } from \"./components/Switch\";\nimport { lightTheme, darkTheme } from \"./features/styles/themes\";\nimport { Theme } from 'tamagui';\nimport { Mutex } from 'async-mutex';\nimport { SongSelected } from \"./components/SongSelected\";\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar Tab = createBottomTabNavigator();\nvar searchIcon = function searchIcon(_ref) {\n  var color = _ref.color,\n    size = _ref.size;\n  return _jsx(FontAwesome, {\n    name: \"search\",\n    size: size,\n    color: color\n  });\n};\nvar favIcon = function favIcon(_ref2) {\n  var color = _ref2.color,\n    size = _ref2.size;\n  return _jsx(FontAwesome, {\n    name: \"heart\",\n    size: size,\n    color: color\n  });\n};\nvar tabOpacity = function tabOpacity(props) {\n  return _jsx(TouchableOpacity, _objectSpread({}, props));\n};\nvar mutex = new Mutex();\nexport function Index() {\n  var dispatch = useDispatch();\n  var theme = useSelector(function (state) {\n    return state.theme.actual;\n  });\n  var isDark = theme === 'dark';\n  var colorStatus = isDark ? 'light' : 'dark';\n  var deviceColor = useColorScheme();\n  var setThemeStore = function setThemeStore() {\n    dispatch(setTheme(deviceColor));\n  };\n  var isSongSelected = useSelector(function (state) {\n    return state.songs.isSongSelected;\n  });\n  useEffect(function () {\n    setThemeStore();\n  }, [deviceColor]);\n  var nameIconSwitch = isDark ? 'moon' : 'sunny';\n  var switchIcon = function switchIcon(_ref3) {\n    var color = _ref3.color,\n      size = _ref3.size;\n    return _jsx(Ionicons, {\n      name: nameIconSwitch,\n      size: size,\n      color: color\n    });\n  };\n  var cambiarTema = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      return yield mutex.runExclusive(_asyncToGenerator(function* () {\n        return dispatch(toggle());\n      }));\n    });\n    return function cambiarTema() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var tabSwitch = function tabSwitch(props) {\n    return _jsx(TouchableOpacity, _objectSpread(_objectSpread({}, props), {}, {\n      onPress: cambiarTema\n    }));\n  };\n  return _jsxs(SafeAreaProvider, {\n    children: [_jsx(NavigationContainer, {\n      theme: isDark ? darkTheme : lightTheme,\n      children: _jsx(Theme, {\n        name: theme,\n        children: _jsxs(View, {\n          style: {\n            flex: 1,\n            position: 'relative'\n          },\n          children: [_jsxs(Tab.Navigator, {\n            initialRouteName: \"Discover\",\n            screenOptions: {\n              headerShown: false,\n              tabBarStyle: {\n                height: 60\n              }\n            },\n            children: [_jsx(Tab.Screen, {\n              name: \"Buscador\",\n              component: DiscoverScreen,\n              options: {\n                tabBarIcon: searchIcon,\n                tabBarButton: tabOpacity,\n                tabBarLabel: ''\n              }\n            }), _jsx(Tab.Screen, {\n              name: \"Favoritos\",\n              component: Favs,\n              options: {\n                tabBarIcon: favIcon,\n                tabBarButton: tabOpacity,\n                tabBarLabel: '',\n                headerShown: true\n              }\n            }), _jsx(Tab.Screen, {\n              name: \"Switch\",\n              component: Switch,\n              options: {\n                tabBarIcon: switchIcon,\n                tabBarButton: tabSwitch,\n                tabBarLabel: ''\n              }\n            })]\n          }), isSongSelected ? _jsx(SongSelected, {}) : null]\n        })\n      })\n    }), _jsx(StatusBar, {\n      style: colorStatus\n    })]\n  });\n}\nexport default Index;","map":{"version":3,"names":["React","useEffect","TouchableOpacity","useColorScheme","View","SafeAreaProvider","StatusBar","useSelector","useDispatch","toggle","setTheme","NavigationContainer","createBottomTabNavigator","FontAwesome","Ionicons","DiscoverScreen","Favs","Switch","lightTheme","darkTheme","Theme","Mutex","SongSelected","createNativeStackNavigator","jsx","_jsx","jsxs","_jsxs","Stack","Tab","searchIcon","_ref","color","size","name","favIcon","_ref2","tabOpacity","props","_objectSpread","mutex","Index","dispatch","theme","state","actual","isDark","colorStatus","deviceColor","setThemeStore","isSongSelected","songs","nameIconSwitch","switchIcon","_ref3","cambiarTema","_ref4","_asyncToGenerator","runExclusive","apply","arguments","tabSwitch","onPress","children","style","flex","position","Navigator","initialRouteName","screenOptions","headerShown","tabBarStyle","height","Screen","component","options","tabBarIcon","tabBarButton","tabBarLabel"],"sources":["/Users/juanfer14/Public/itunes-edamm/Index.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { TouchableOpacity, useColorScheme, View } from 'react-native';\n\n// Libreria para mantener el statusBar\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nimport { StatusBar } from 'expo-status-bar';\n\n// Obtengo del store, el valor de theme\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toggle, setTheme } from './features/styles/themeSlice'\n\n// Importo tabs, para navegar entre las screens de busqueda de\n// artistas y las canciones favoritas de los artistas\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\n\n\n// Iconos\nimport { FontAwesome } from '@expo/vector-icons';\nimport { Ionicons } from '@expo/vector-icons';\n\n\n// Componentes\nimport { DiscoverScreen } from './components/DiscoverScreen';\nimport { Favs } from './components/Favs';\nimport { Switch } from './components/Switch';\n\n\n// Temas\nimport { lightTheme, darkTheme } from './features/styles/themes'\n\nimport { Theme } from 'tamagui'\n\nimport { Mutex } from 'async-mutex';\n\nimport { SongSelected } from './components/SongSelected'\n\n/* \n * Stack de navegacion, para mostrar el detalle de la cancion\n */\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n\nconst Stack = createNativeStackNavigator();\n\n// Se instancia el Tab\nconst Tab = createBottomTabNavigator();\n\n// Icono para acceder a busquedas\nconst searchIcon = ({color, size}) => (\n   <FontAwesome name=\"search\" size={size} color={color} /> \n);\n\n// Icono para acceder a favoritos\nconst favIcon = ({color, size}) => (\n   <FontAwesome name=\"heart\" size={size} color={color} /> \n);\n\n// Componente para generar el efecto de presion.\nconst tabOpacity = (props) => <TouchableOpacity {...props} />\n\nconst mutex = new Mutex();\n\n\nexport function Index() {\n\n  // Dispatch, utilizado para realizar cambios de tema\n  const dispatch = useDispatch();\n  \n  // El tema que actualmente esta siendo utilizado de la store\n  const theme = useSelector(state => state.theme.actual);\n  // Termino para saber si esta en modo dark o no.\n  const isDark = theme === 'dark';\n  // Color que esta utilizando la barra de estado\n  const colorStatus = isDark ? 'light' : 'dark';\n  // Color que actualemnte esta utilizando el sistema\n  const deviceColor = useColorScheme();\n\n  // Funcion para alternar el tema actual, segun si el dispositivo cambia \n  // de modo noche a modo dia\n  const setThemeStore = () => { dispatch(setTheme(deviceColor)); }\n\n\n  const isSongSelected = useSelector(state => state.songs.isSongSelected)\n\n  // Cada vez que se cambia el color del sistema, se cambia a ese color\n  useEffect(() => { \n\tsetThemeStore(); \n  }, [deviceColor]);\n\n  // Nombre del icono que debe aparecer, para realizar el cambio \n  // entre modo dia y noche\n  const nameIconSwitch = isDark ? 'moon' : 'sunny';\n\n  // Funcion para cambiar de iconos en modo dia y modo noche\n  const switchIcon = ({color, size}) => (\n\t\t<Ionicons name={nameIconSwitch} size={size} color={color} />\n  );\n\n  const cambiarTema = async() => await mutex.runExclusive(async () => dispatch(toggle()))\n\n  // Componente para realizar el intercambio entre modo dia y modo noche\n  const tabSwitch = (props) => <TouchableOpacity {...props} onPress={cambiarTema} />\n\n  return (\n \t\t<SafeAreaProvider>\n      \t\t<NavigationContainer theme={isDark ? darkTheme : lightTheme}>\n\t\t\t\t\n\t\t\t\t<Theme name={theme}>\n\t\t\t\t<View style={{flex:1, position: 'relative'}}>\n\t\t\t\t\n\t\t\t\t\t<Tab.Navigator initialRouteName=\"Discover\" \n\t\t\t\t\t\tscreenOptions={{ \n\t\t\t\t\t\t\theaderShown: false, \n\t\t\t\t\t\t\ttabBarStyle: { height: 60 } \n\t\t\t\t\t\t}}  \n\t\t\t\t\t> \n\t\t\t\t\t\t\n\t\t\t\t\t\t<Tab.Screen name=\"Buscador\" component={DiscoverScreen} \n\t\t\t\t\t\t\toptions={{ \n\t\t\t\t\t\t\t\ttabBarIcon: searchIcon, \n\t\t\t\t\t\t\t\ttabBarButton: tabOpacity, \n\t\t\t\t\t\t\t\ttabBarLabel: '' \n\t\t\t\t\t\t\t}} \n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Tab.Screen name=\"Favoritos\" component={Favs} \n\t\t\t\t\t\t\toptions={{ \n\t\t\t\t\t\t\t\ttabBarIcon: favIcon, \n\t\t\t\t\t\t\t\ttabBarButton: tabOpacity, \n\t\t\t\t\t\t\t\ttabBarLabel: '',\n\t\t\t\t\t\t\t\theaderShown: true\n\t\t\t\t\t\t\t}} \n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Tab.Screen name=\"Switch\" component={Switch} \n\t\t\t\t\t\t\toptions={{ \n\t\t\t\t\t\t\t\ttabBarIcon: switchIcon, \n\t\t\t\t\t\t\t\ttabBarButton: tabSwitch, \n\t\t\t\t\t\t\t\ttabBarLabel: '' \n\t\t\t\t\t\t\t}} \n\t\t\t\t\t\t/>\n\t\t\t\t\t</Tab.Navigator>\n\t\t\t\t\t{ isSongSelected ? <SongSelected/> : null}\n\t\t\t\t\t</View>\n\t\t\t\t</Theme>\n\t\t\t\t\n\t\n        </NavigationContainer>\n\t\t\n\t\t\n         <StatusBar style={colorStatus} />\n\t\t \n    </SafeAreaProvider>        \n  );\n}\n\nexport default Index;"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,OAAAC,gBAAA;AAAA,OAAAC,cAAA;AAAA,OAAAC,IAAA;AAIzC,SAASC,gBAAgB,QAAQ,gCAAgC;AAEjE,SAASC,SAAS,QAAQ,iBAAiB;AAG3C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,MAAM,EAAEC,QAAQ;AAIzB,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,wBAAwB,QAAQ,+BAA+B;AAIxE,SAASC,WAAW,QAAQ,oBAAoB;AAChD,SAASC,QAAQ,QAAQ,oBAAoB;AAI7C,SAASC,cAAc;AACvB,SAASC,IAAI;AACb,SAASC,MAAM;AAIf,SAASC,UAAU,EAAEC,SAAS;AAE9B,SAASC,KAAK,QAAQ,SAAS;AAE/B,SAASC,KAAK,QAAQ,aAAa;AAEnC,SAASC,YAAY;AAKrB,SAASC,0BAA0B,QAAQ,gCAAgC;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE5E,IAAMC,KAAK,GAAGL,0BAA0B,CAAC,CAAC;AAG1C,IAAMM,GAAG,GAAGjB,wBAAwB,CAAC,CAAC;AAGtC,IAAMkB,UAAU,GAAG,SAAbA,UAAUA,CAAAC,IAAA;EAAA,IAAKC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAEC,IAAI,GAAAF,IAAA,CAAJE,IAAI;EAAA,OAC7BR,IAAA,CAACZ,WAAW;IAACqB,IAAI,EAAC,QAAQ;IAACD,IAAI,EAAEA,IAAK;IAACD,KAAK,EAAEA;EAAM,CAAE,CAAC;AAAA,CACzD;AAGD,IAAMG,OAAO,GAAG,SAAVA,OAAOA,CAAAC,KAAA;EAAA,IAAKJ,KAAK,GAAAI,KAAA,CAALJ,KAAK;IAAEC,IAAI,GAAAG,KAAA,CAAJH,IAAI;EAAA,OAC1BR,IAAA,CAACZ,WAAW;IAACqB,IAAI,EAAC,OAAO;IAACD,IAAI,EAAEA,IAAK;IAACD,KAAK,EAAEA;EAAM,CAAE,CAAC;AAAA,CACxD;AAGD,IAAMK,UAAU,GAAG,SAAbA,UAAUA,CAAIC,KAAK;EAAA,OAAKb,IAAA,CAACvB,gBAAgB,EAAAqC,aAAA,KAAKD,KAAK,CAAG,CAAC;AAAA;AAE7D,IAAME,KAAK,GAAG,IAAInB,KAAK,CAAC,CAAC;AAGzB,OAAO,SAASoB,KAAKA,CAAA,EAAG;EAGtB,IAAMC,QAAQ,GAAGlC,WAAW,CAAC,CAAC;EAG9B,IAAMmC,KAAK,GAAGpC,WAAW,CAAC,UAAAqC,KAAK;IAAA,OAAIA,KAAK,CAACD,KAAK,CAACE,MAAM;EAAA,EAAC;EAEtD,IAAMC,MAAM,GAAGH,KAAK,KAAK,MAAM;EAE/B,IAAMI,WAAW,GAAGD,MAAM,GAAG,OAAO,GAAG,MAAM;EAE7C,IAAME,WAAW,GAAG7C,cAAc,CAAC,CAAC;EAIpC,IAAM8C,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;IAAEP,QAAQ,CAAChC,QAAQ,CAACsC,WAAW,CAAC,CAAC;EAAE,CAAC;EAGhE,IAAME,cAAc,GAAG3C,WAAW,CAAC,UAAAqC,KAAK;IAAA,OAAIA,KAAK,CAACO,KAAK,CAACD,cAAc;EAAA,EAAC;EAGvEjD,SAAS,CAAC,YAAM;IACjBgD,aAAa,CAAC,CAAC;EACd,CAAC,EAAE,CAACD,WAAW,CAAC,CAAC;EAIjB,IAAMI,cAAc,GAAGN,MAAM,GAAG,MAAM,GAAG,OAAO;EAGhD,IAAMO,UAAU,GAAG,SAAbA,UAAUA,CAAAC,KAAA;IAAA,IAAKtB,KAAK,GAAAsB,KAAA,CAALtB,KAAK;MAAEC,IAAI,GAAAqB,KAAA,CAAJrB,IAAI;IAAA,OAChCR,IAAA,CAACX,QAAQ;MAACoB,IAAI,EAAEkB,cAAe;MAACnB,IAAI,EAAEA,IAAK;MAACD,KAAK,EAAEA;IAAM,CAAE,CAAC;EAAA,CAC3D;EAED,IAAMuB,WAAW;IAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG;MAAA,aAAiBjB,KAAK,CAACkB,YAAY,CAAAD,iBAAA,CAAC;QAAA,OAAYf,QAAQ,CAACjC,MAAM,CAAC,CAAC,CAAC;MAAA,GAAC;IAAA;IAAA,gBAAjF8C,WAAWA,CAAA;MAAA,OAAAC,KAAA,CAAAG,KAAA,OAAAC,SAAA;IAAA;EAAA,GAAsE;EAGvF,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAIvB,KAAK;IAAA,OAAKb,IAAA,CAACvB,gBAAgB,EAAAqC,aAAA,CAAAA,aAAA,KAAKD,KAAK;MAAEwB,OAAO,EAAEP;IAAY,EAAE,CAAC;EAAA;EAElF,OACC5B,KAAA,CAACtB,gBAAgB;IAAA0D,QAAA,GACZtC,IAAA,CAACd,mBAAmB;MAACgC,KAAK,EAAEG,MAAM,GAAG3B,SAAS,GAAGD,UAAW;MAAA6C,QAAA,EAEhEtC,IAAA,CAACL,KAAK;QAACc,IAAI,EAAES,KAAM;QAAAoB,QAAA,EACnBpC,KAAA,CAACvB,IAAI;UAAC4D,KAAK,EAAE;YAACC,IAAI,EAAC,CAAC;YAAEC,QAAQ,EAAE;UAAU,CAAE;UAAAH,QAAA,GAE3CpC,KAAA,CAACE,GAAG,CAACsC,SAAS;YAACC,gBAAgB,EAAC,UAAU;YACzCC,aAAa,EAAE;cACdC,WAAW,EAAE,KAAK;cAClBC,WAAW,EAAE;gBAAEC,MAAM,EAAE;cAAG;YAC3B,CAAE;YAAAT,QAAA,GAGFtC,IAAA,CAACI,GAAG,CAAC4C,MAAM;cAACvC,IAAI,EAAC,UAAU;cAACwC,SAAS,EAAE3D,cAAe;cACrD4D,OAAO,EAAE;gBACRC,UAAU,EAAE9C,UAAU;gBACtB+C,YAAY,EAAExC,UAAU;gBACxByC,WAAW,EAAE;cACd;YAAE,CACF,CAAC,EACFrD,IAAA,CAACI,GAAG,CAAC4C,MAAM;cAACvC,IAAI,EAAC,WAAW;cAACwC,SAAS,EAAE1D,IAAK;cAC5C2D,OAAO,EAAE;gBACRC,UAAU,EAAEzC,OAAO;gBACnB0C,YAAY,EAAExC,UAAU;gBACxByC,WAAW,EAAE,EAAE;gBACfR,WAAW,EAAE;cACd;YAAE,CACF,CAAC,EACF7C,IAAA,CAACI,GAAG,CAAC4C,MAAM;cAACvC,IAAI,EAAC,QAAQ;cAACwC,SAAS,EAAEzD,MAAO;cAC3C0D,OAAO,EAAE;gBACRC,UAAU,EAAEvB,UAAU;gBACtBwB,YAAY,EAAEhB,SAAS;gBACvBiB,WAAW,EAAE;cACd;YAAE,CACF,CAAC;UAAA,CACY,CAAC,EACd5B,cAAc,GAAGzB,IAAA,CAACH,YAAY,IAAC,CAAC,GAAG,IAAI;QAAA,CACnC;MAAC,CACD;IAAC,CAGiB,CAAC,EAGrBG,IAAA,CAACnB,SAAS;MAAC0D,KAAK,EAAEjB;IAAY,CAAE,CAAC;EAAA,CAEpB,CAAC;AAEvB;AAEA,eAAeN,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}