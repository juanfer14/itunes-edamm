{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar __ReactNativeStyleSheet = require('react-native').StyleSheet;\nvar _sheet = __ReactNativeStyleSheet.create({\n  \"0:SongSelected.jsx:172\": {\n    \"alignItems\": \"stretch\",\n    \"flexDirection\": \"row\"\n  },\n  \"1:SongSelected.jsx:172\": {\n    \"flex\": 1\n  }\n});\nvar __ReactNativeView = require('react-native').View;\nvar __ReactNativeText = require('react-native').Text;\nimport React, { useState, useEffect, useRef } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { ListItem, Theme, XStack, Text } from 'tamagui';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Image } from 'expo-image';\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { Audio } from 'expo-av';\nimport { setSong, setIsPlaying } from \"../features/songs/songSlice\";\nimport { Mutex } from 'async-mutex';\nimport { addFav, removeFav } from \"../features/favs/favsSlice\";\nimport { useFonts } from \"expo-font\";\nimport Toast from 'react-native-root-toast';\nimport * as Animatable from 'react-native-animatable';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function SongSelected(_ref) {\n  var navigation = _ref.navigation;\n  var _useFonts = useFonts({\n      Inter: require('@tamagui/font-inter/otf/Inter-Medium.otf'),\n      InterBold: require('@tamagui/font-inter/otf/Inter-Bold.otf')\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    loaded = _useFonts2[0];\n  var textRef = useRef(null);\n  var mutex = new Mutex();\n  var favSongs = useSelector(function (state) {\n    return state.favs.favs;\n  });\n  var songSelected = useSelector(function (state) {\n    return state.songs.songSelected;\n  });\n  var isPlaying = useSelector(function (state) {\n    return state.songs.isPlaying;\n  });\n  var songPlayed = useSelector(function (state) {\n    return state.songs.songPlayed;\n  });\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    localSong = _useState2[0],\n    setLocalSong = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    openFav = _useState4[0],\n    setOpenFav = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    openUnfav = _useState6[0],\n    setOpenUnfav = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    toast = _useState8[0],\n    setToast = _useState8[1];\n  var options = {\n    duration: 3500,\n    position: -150,\n    shadow: true,\n    animation: true,\n    hideOnPress: true,\n    backgroundColor: 'rgb(10, 132, 255)',\n    textColor: 'white'\n  };\n  var dispatch = useDispatch();\n  var loadAudio = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      yield mutex.runExclusive(_asyncToGenerator(function* () {\n        dispatch(setIsPlaying(false));\n        var _yield$Audio$Sound$cr = yield Audio.Sound.createAsync({\n            uri: songSelected.previewUrl\n          }, {\n            shouldPlay: false\n          }, function (status) {\n            if (status.didJustFinish) {\n              console.log(\"se esta pausando\");\n              dispatch(setIsPlaying(false));\n              sound.pauseAsync();\n              sound.setPositionAsync(0);\n            }\n          }),\n          sound = _yield$Audio$Sound$cr.sound;\n        yield sound.setVolumeAsync(1);\n        dispatch(setSong(sound));\n        localSong.push(sound);\n      }));\n    });\n    return function loadAudio() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    console.log('reproduciendo: ' + songSelected.trackName);\n    loadAudio();\n    return _asyncToGenerator(function* () {\n      yield mutex.runExclusive(_asyncToGenerator(function* () {\n        localSong.forEach(function (elem) {\n          elem.unloadAsync();\n        });\n        setLocalSong([]);\n      }));\n    });\n  }, [songSelected]);\n  useEffect(function () {\n    playPauseAudio();\n  }, [songPlayed]);\n  useEffect(function () {\n    var startMarquee = function startMarquee() {\n      var _textRef$current;\n      (_textRef$current = textRef.current) == null ? void 0 : _textRef$current.slideInRight(5000).then(function () {\n        startMarquee();\n      });\n    };\n    startMarquee();\n    return function () {\n      var _textRef$current2;\n      (_textRef$current2 = textRef.current) == null ? void 0 : _textRef$current2.stopAnimation();\n    };\n  }, []);\n  var playPauseAudio = function () {\n    var _ref6 = _asyncToGenerator(function* () {\n      yield mutex.runExclusive(_asyncToGenerator(function* () {\n        try {\n          var status = yield songPlayed.getStatusAsync();\n          if (songPlayed && status.isLoaded) {\n            if (status.isPlaying) {\n              yield songPlayed.pauseAsync();\n            } else {\n              yield songPlayed.playAsync();\n            }\n            dispatch(setIsPlaying(!isPlaying));\n          }\n        } catch (error) {\n          console.log(error);\n        }\n      }));\n    });\n    return function playPauseAudio() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var nameIcon = isPlaying ? 'pause' : 'play';\n  var isFav = favSongs.some(function (song) {\n    return song.trackId === songSelected.trackId;\n  });\n  var nameFav = isFav ? 'heart' : 'heart-outline';\n  var pressFav = function pressFav() {\n    if (toast) Toast.hide(toast);\n    var eliminar = 'Eliminado de favoritos';\n    var agregar = 'Agregado a favoritos!';\n    if (isFav) {\n      setToast(Toast.show(eliminar, options));\n      dispatch(removeFav(songSelected));\n    } else {\n      setToast(Toast.show(agregar, options));\n      dispatch(addFav(songSelected));\n    }\n    setTimeout(function () {\n      Toast.hide(toast);\n    }, 3500);\n  };\n  var textAnimation = function textAnimation() {\n    return _jsx(Animatable.View, {\n      animation: \"bounceInLeft\",\n      duration: 600,\n      children: _jsx(__ReactNativeView, {\n        \"data-at\": \"SongSelected.jsx:172\",\n        \"data-in\": \"SongSelected\",\n        \"data-is\": \"XStack\",\n        style: [_sheet[\"0:SongSelected.jsx:172\"], _sheet[\"1:SongSelected.jsx:172\"]],\n        children: _jsx(Text, {})\n      })\n    });\n  };\n  return loaded ? _jsx(Theme, {\n    name: \"blue\",\n    children: _jsx(ListItem, {\n      style: {\n        flex: 1,\n        position: 'absolute',\n        bottom: 60\n      },\n      hoverTheme: true,\n      pressTheme: true,\n      onPress: function onPress(_) {\n        return navigation.navigate('SongDetail');\n      },\n      icon: _jsx(Image, {\n        source: {\n          uri: songSelected.artworkUrl60.replace(\"60x60\", \"600x600\")\n        },\n        style: {\n          width: 60,\n          height: 60\n        }\n      }),\n      iconAfter: _jsxs(XStack, {\n        space: \"$4\",\n        children: [_jsx(TouchableOpacity, {\n          onPress: pressFav,\n          children: _jsx(Icon, {\n            name: nameFav,\n            size: 45,\n            color: \"rgb(10, 132, 255)\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: playPauseAudio,\n          children: _jsx(Icon, {\n            name: nameIcon,\n            size: 45,\n            color: \"gray\"\n          })\n        })]\n      }),\n      title: songSelected.trackName,\n      subTitle: songSelected.artistName\n    })\n  }) : null;\n}\nexport default SongSelected;","map":{"version":3,"names":["React","useState","useEffect","useRef","TouchableOpacity","ListItem","Theme","XStack","Text","useSelector","useDispatch","Image","Icon","Audio","setSong","setIsPlaying","Mutex","addFav","removeFav","useFonts","Toast","Animatable","jsx","_jsx","jsxs","_jsxs","SongSelected","_ref","navigation","_useFonts","Inter","require","InterBold","_useFonts2","_slicedToArray","loaded","textRef","mutex","favSongs","state","favs","songSelected","songs","isPlaying","songPlayed","_useState","_useState2","localSong","setLocalSong","_useState3","_useState4","openFav","setOpenFav","_useState5","_useState6","openUnfav","setOpenUnfav","_useState7","_useState8","toast","setToast","options","duration","position","shadow","animation","hideOnPress","backgroundColor","textColor","dispatch","loadAudio","_ref2","_asyncToGenerator","runExclusive","_yield$Audio$Sound$cr","Sound","createAsync","uri","previewUrl","shouldPlay","status","didJustFinish","console","log","sound","pauseAsync","setPositionAsync","setVolumeAsync","push","apply","arguments","trackName","forEach","elem","unloadAsync","playPauseAudio","startMarquee","_textRef$current","current","slideInRight","then","_textRef$current2","stopAnimation","_ref6","getStatusAsync","isLoaded","playAsync","error","nameIcon","isFav","some","song","trackId","nameFav","pressFav","hide","eliminar","agregar","show","setTimeout","textAnimation","View","children","__ReactNativeView","style","_sheet","name","flex","bottom","hoverTheme","pressTheme","onPress","_","navigate","icon","source","artworkUrl60","replace","width","height","iconAfter","space","size","color","title","subTitle","artistName"],"sources":["/Users/juanfer14/Public/itunes-edamm/components/SongSelected.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\n\nimport { TouchableOpacity} from 'react-native';\n\nimport { ListItem, Theme, XStack, Text } from 'tamagui'\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { Image } from 'expo-image';\n\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\n\nimport { Audio } from 'expo-av'\n\nimport { setSong, setIsPlaying } from '../features/songs/songSlice';\n\nimport { Mutex } from 'async-mutex';\n\nimport { addFav, removeFav } from '../features/favs/favsSlice';\n\n// Importo fonts para tamagui\nimport { useFonts } from \"expo-font\";\n\nimport Toast from 'react-native-root-toast'\n\nimport * as Animatable from 'react-native-animatable';\n\n\n\nexport function SongSelected({ navigation }){\n\n    const [loaded] = useFonts({\n        Inter: require('@tamagui/font-inter/otf/Inter-Medium.otf'),\n        InterBold: require('@tamagui/font-inter/otf/Inter-Bold.otf'),\n    });\n    \n    const textRef = useRef(null);\n\n    \n\n    const mutex = new Mutex();\n\n    const favSongs = useSelector(state => state.favs.favs);\n    const songSelected = useSelector(state => state.songs.songSelected)\n    const isPlaying = useSelector(state => state.songs.isPlaying);\n    const songPlayed = useSelector(state => state.songs.songPlayed)\n\n    const [localSong, setLocalSong] = useState([]);\n    const [openFav, setOpenFav] = useState(false);\n    const [openUnfav, setOpenUnfav] = useState(false);\n    \n    const [toast, setToast] = useState(null);\n    const options = {\n        duration: 3500,\n        position: -150,\n        shadow: true,\n        animation: true,\n        hideOnPress: true,\n        backgroundColor: 'rgb(10, 132, 255)',\n        textColor: 'white',\n    }\n    \n    // Dispatcher para ejecutar acciones de las stores\n    const dispatch = useDispatch();\n\n    const loadAudio = async () => {\n        await mutex.runExclusive(async () => {\n                dispatch(setIsPlaying(false))\n\n                    \n                const { sound } = await Audio.Sound.createAsync(\n                    { uri: songSelected.previewUrl },\n                    { shouldPlay: false },\n                    (status) => {\n                        if(status.didJustFinish){\n                            console.log(\"se esta pausando\")\n                            dispatch(setIsPlaying(false));\n                            sound.pauseAsync();\n                            sound.setPositionAsync(0);\n                        }\n                        \n                        \n                    }\n                );\n                await sound.setVolumeAsync(1)\n                dispatch(setSong(sound))\n                localSong.push(sound); \n        })  \n    }\n\n    useEffect(() => {\n        // Limpiar el sonido cuando el componente se desmonta\n        console.log('reproduciendo: ' + songSelected.trackName);           \n        loadAudio();\n        return async () => {\n            await mutex.runExclusive(async () => {\n                localSong.forEach((elem) => {elem.unloadAsync()})\n                setLocalSong([]);\n            })\n        }\n      }, [songSelected]);\n\n\n      useEffect(() => {\n        playPauseAudio();\n      }, [songPlayed])\n\n      useEffect(() => {\n        const startMarquee = () => {\n            textRef.current?.slideInRight(5000).then(() => {\n              // Reiniciar la animación después de que termine\n              startMarquee();\n            });\n          };\n      \n          startMarquee();\n      \n          return () => {\n            // Limpieza si es necesario al salir del componente\n            textRef.current?.stopAnimation();\n          };\n      }, [])\n\n\n    const playPauseAudio = async () => {\n        await mutex.runExclusive(async () => {\n            try {\n                const status = await songPlayed.getStatusAsync();\n                if (songPlayed && status.isLoaded) {\n                    if (status.isPlaying) {\n                        await songPlayed.pauseAsync();\n                    } else {\n                        await songPlayed.playAsync();\n                    }\n                    dispatch(setIsPlaying(!isPlaying));\n                }\n            }\n            catch(error){console.log(error)}\n        })\n        \n        \n    };\n\n    const nameIcon = isPlaying ? 'pause' : 'play'\n\n    const isFav = favSongs.some(song => song.trackId === songSelected.trackId);\n\n    const nameFav = isFav ? 'heart' : 'heart-outline'\n\n    const pressFav = () => { \n        if(toast)\n            Toast.hide(toast);\n\n        const eliminar = 'Eliminado de favoritos';\n        const agregar = 'Agregado a favoritos!';\n        \n        if(isFav){\n            setToast(Toast.show(eliminar, options));\n            dispatch(removeFav(songSelected));\n        }\n        else {\n            setToast(Toast.show(agregar, options));\n            dispatch(addFav(songSelected));\n        }\n        setTimeout(() => {\n            Toast.hide(toast)\n        }, 3500)\n    }\n    \n    const textAnimation = () => (\n        <Animatable.View animation=\"bounceInLeft\" duration={600}>\n            <XStack flex={1}>\n                <Text></Text>\n            </XStack>\n        </Animatable.View>\n    )\n\n    return (\n        loaded ?\n            <Theme name=\"blue\">\n                <ListItem\n                    style={{flex: 1, position: 'absolute', bottom: 60}}\n                    hoverTheme\n                    pressTheme\n                    onPress={_ => navigation.navigate('SongDetail') }\n                    icon={<Image source={{uri: songSelected.artworkUrl60.replace(\"60x60\", \"600x600\")}} style={{ width: 60, height: 60 }} />}\n                    iconAfter={\n                        <XStack space=\"$4\">\n                            <TouchableOpacity onPress={pressFav}>\n                                <Icon name={nameFav} size={45} color=\"rgb(10, 132, 255)\" />\n                            </TouchableOpacity> \n                            <TouchableOpacity onPress={playPauseAudio}>\n                                <Icon name={nameIcon}  size={45} color=\"gray\" />\n                            </TouchableOpacity>\n                        </XStack>\n                    }\n                    title={songSelected.trackName}\n                    subTitle={songSelected.artistName}\n                />\n\n            </Theme>\n         : null\n    )\n\n}\n\nexport default SongSelected;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}