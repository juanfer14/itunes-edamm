{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nvar __ReactNativeView = require('react-native').View;\nvar __ReactNativeText = require('react-native').Text;\nimport React, { useEffect, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setLoad, setOffset } from \"../features/status/statusSlice\";\nimport { setTerm, setIsSongSelected, setSong } from \"../features/songs/songSlice\";\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { SearchBar } from '@rneui/themed';\nimport { XStack } from 'tamagui';\nimport { CommonActions } from '@react-navigation/native';\nimport { Mutex, Semaphore, withTimeout } from 'async-mutex';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar mutex = new Mutex();\nexport function InputFetch(_ref) {\n  var navigation = _ref.navigation;\n  var dispatch = useDispatch();\n  var term = useSelector(function (state) {\n    return state.songs.termSearch;\n  });\n  var isDark = useSelector(function (state) {\n    return state.theme.isDark;\n  });\n  var load = useSelector(function (state) {\n    return state.status.load;\n  });\n  var inputRef = useRef(null);\n  var cambiarText = function () {\n    var _ref2 = _asyncToGenerator(function* (text) {\n      yield mutex.runExclusive(_asyncToGenerator(function* () {\n        dispatch(setOffset(0));\n        dispatch(setTerm(text));\n        dispatch(setIsSongSelected(false));\n        dispatch(setSong(null));\n      }));\n    });\n    return function cambiarText(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var enviar = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      yield mutex.runExclusive(_asyncToGenerator(function* () {\n        dispatch(setOffset(0));\n        dispatch(setIsSongSelected(false));\n        dispatch(setSong(null));\n        dispatch(setLoad(true));\n      }));\n    });\n    return function enviar() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, []);\n  var background = isDark ? 'rgb(23, 32, 42)' : 'white';\n  var border = isDark ? 'rgb(23, 32, 42)' : 'white';\n  var letterColor = isDark ? 'white' : 'black';\n  return _jsx(SearchBar, {\n    containerStyle: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      backgroundColor: background,\n      borderColor: border\n    },\n    inputStyle: {\n      color: letterColor\n    },\n    inputContainerStyle: {\n      backgroundColor: background\n    },\n    ref: inputRef,\n    placeholder: \"Ingrese el nombre del artista...\",\n    lightTheme: !isDark,\n    style: {\n      flex: 1,\n      fontSize: 16\n    },\n    value: term,\n    onChangeText: cambiarText,\n    onSubmitEditing: enviar,\n    searchIcon: _jsx(TouchableOpacity, {\n      onPress: function onPress(_) {\n        return navigation.dispatch(CommonActions.goBack());\n      },\n      children: _jsx(Icon, {\n        name: \"keyboard-backspace\",\n        size: 40,\n        color: \"gray\"\n      })\n    }),\n    clearIcon: term ? _jsxs(XStack, {\n      space: \"$2\",\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return cambiarText('');\n        },\n        children: _jsx(Icon, {\n          name: \"close-box\",\n          size: 40,\n          color: \"gray\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          enviar();\n          inputRef.current.blur();\n        },\n        children: _jsx(Icon, {\n          name: \"card-search\",\n          size: 40,\n          color: \"gray\"\n        })\n      })]\n    }) : null,\n    round: false\n  });\n}\nexport default InputFetch;","map":{"version":3,"names":["React","useEffect","useRef","View","StyleSheet","TouchableOpacity","useSelector","useDispatch","setLoad","setOffset","setTerm","setIsSongSelected","setSong","Icon","SearchBar","XStack","CommonActions","Mutex","Semaphore","withTimeout","jsx","_jsx","jsxs","_jsxs","mutex","InputFetch","_ref","navigation","dispatch","term","state","songs","termSearch","isDark","theme","load","status","inputRef","cambiarText","_ref2","_asyncToGenerator","text","runExclusive","_x","apply","arguments","enviar","_ref4","current","focus","background","border","letterColor","containerStyle","flexDirection","alignItems","backgroundColor","borderColor","inputStyle","color","inputContainerStyle","ref","placeholder","lightTheme","style","flex","fontSize","value","onChangeText","onSubmitEditing","searchIcon","onPress","_","goBack","children","name","size","clearIcon","space","blur","round"],"sources":["/Users/juanfer14/Public/itunes-edamm/components/InputFetch.jsx"],"sourcesContent":["// Importo componentes de react native\nimport React, { useEffect, useRef } from 'react'\nimport { View, StyleSheet, TouchableOpacity} from 'react-native';\n\n// Importo metodos del store y slices\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setLoad, setOffset } from '../features/status/statusSlice'\nimport { setTerm, setIsSongSelected, setSong } from '../features/songs/songSlice';\n\n// Importo iconos\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\n\n// Importo Input de react-native\nimport { SearchBar } from '@rneui/themed';\nimport { XStack } from 'tamagui';\n\nimport { CommonActions } from '@react-navigation/native';\n\n// Importo mutex para sincronismo\nimport {Mutex, Semaphore, withTimeout} from 'async-mutex';\n\nconst mutex = new Mutex();\n\nexport  function InputFetch({navigation}){\n\n    const dispatch = useDispatch();\n\n    // Termino a buscar\n    const term = useSelector(state => state.songs.termSearch)\n    const isDark = useSelector(state => state.theme.isDark);\n    const load = useSelector(state => state.status.load)\n\n    const inputRef = useRef(null);\n\n    const cambiarText = async (text) => {\n        await mutex.runExclusive( async() => {\n            dispatch(setOffset(0))\n            dispatch(setTerm(text));\n            dispatch(setIsSongSelected(false));\n            dispatch(setSong(null));\n        })\n    }\n\n    const enviar = async () => {\n        await mutex.runExclusive( async() => {\n            dispatch(setOffset(0))\n            dispatch(setIsSongSelected(false));\n            dispatch(setSong(null));\n            dispatch(setLoad(true))\n        })\n    }\n\n    useEffect(() => {\n        if(inputRef.current){\n            inputRef.current.focus();\n        }\n    }, [])\n\n    const background = isDark ? 'rgb(23, 32, 42)' : 'white';\n    const border = isDark ? 'rgb(23, 32, 42)' : 'white';\n    const letterColor = isDark ? 'white' : 'black'\n\n    return (\n        <SearchBar\n            containerStyle={{ flexDirection: 'row', alignItems: 'center', backgroundColor: background, borderColor: border }}\n            inputStyle={{color: letterColor}}\n            inputContainerStyle={{backgroundColor: background}}\n            ref={inputRef}\n            placeholder='Ingrese el nombre del artista...'\n            lightTheme={!isDark}\n            style={{flex:1, fontSize: 16}}\n            value={term}\n            onChangeText={cambiarText}\n            onSubmitEditing={enviar}\n            searchIcon={\n                <TouchableOpacity onPress={_ => navigation.dispatch(CommonActions.goBack())}>\n                    <Icon name=\"keyboard-backspace\" size={40} color=\"gray\" />\n                </TouchableOpacity>\n            }\n            clearIcon={\n                term ?\n                <XStack space=\"$2\">\n                    <TouchableOpacity onPress={() => cambiarText('')} >\n                        <Icon name=\"close-box\" size={40} color=\"gray\" />\n                    </TouchableOpacity> \n                    <TouchableOpacity onPress={() => {enviar(); inputRef.current.blur()}} >\n                        <Icon name=\"card-search\" size={40} color=\"gray\" />\n                    </TouchableOpacity>\n                </XStack>\n                : null\n                \n            }\n            round={false}\n\n            \n        />\n    )\n}\n\nexport default InputFetch;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}