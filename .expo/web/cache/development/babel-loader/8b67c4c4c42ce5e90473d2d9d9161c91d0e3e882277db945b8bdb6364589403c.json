{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport var songSlice = createSlice({\n  name: 'songs',\n  initialState: {\n    termSearch: '',\n    songSelected: null,\n    isSongSelected: false,\n    songPlayed: null,\n    isPlaying: false\n  },\n  reducers: {\n    setTerm: function setTerm(state, action) {\n      state.termSearch = action.payload;\n    },\n    setSelectedSong: function setSelectedSong(state, action) {\n      state.songSelected = action.payload;\n    },\n    setIsSongSelected: function setIsSongSelected(state, action) {\n      state.isSongSelected = action.payload;\n    },\n    setSong: function setSong(state, action) {\n      state.songPlayed = action.payload;\n    },\n    setIsPlaying: function setIsPlaying(state, action) {\n      state.isPlaying = action.payload;\n    }\n  }\n});\nvar _songSlice$actions = songSlice.actions,\n  setTerm = _songSlice$actions.setTerm,\n  setSelectedSong = _songSlice$actions.setSelectedSong,\n  setIsSongSelected = _songSlice$actions.setIsSongSelected,\n  setSong = _songSlice$actions.setSong,\n  setIsPlaying = _songSlice$actions.setIsPlaying;\nexport { setTerm, setSelectedSong, setIsSongSelected, setSong, setIsPlaying };\nexport default songSlice.reducer;","map":{"version":3,"names":["createSlice","songSlice","name","initialState","termSearch","songSelected","isSongSelected","songPlayed","isPlaying","reducers","setTerm","state","action","payload","setSelectedSong","setIsSongSelected","setSong","setIsPlaying","_songSlice$actions","actions","reducer"],"sources":["/Users/juanfer14/Public/itunes-edamm/features/songs/songSlice.jsx"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\n\nexport const songSlice = createSlice({\n    name: 'songs',\n    initialState: {\n        termSearch: '',\n        songSelected: null,\n        isSongSelected: false,\n        songPlayed: null,\n        isPlaying: false,\n    },\n    reducers: {\n        setTerm: (state, action) => {\n            state.termSearch = action.payload;\n        },\n        setSelectedSong: (state, action) => {\n            state.songSelected = action.payload\n        },\n        setIsSongSelected: (state, action) => {\n            state.isSongSelected = action.payload;\n        },\n        setSong: (state, action) => {\n            state.songPlayed = action.payload;\n        },\n        setIsPlaying: (state, action) => {\n            state.isPlaying = action.payload\n        }\n    },\n})\n\nexport const { setTerm, setSelectedSong, setIsSongSelected, setSong, setIsPlaying} = songSlice.actions;\n\nexport default songSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAG9C,OAAO,IAAMC,SAAS,GAAGD,WAAW,CAAC;EACjCE,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACVC,UAAU,EAAE,EAAE;IACdC,YAAY,EAAE,IAAI;IAClBC,cAAc,EAAE,KAAK;IACrBC,UAAU,EAAE,IAAI;IAChBC,SAAS,EAAE;EACf,CAAC;EACDC,QAAQ,EAAE;IACNC,OAAO,EAAE,SAAAA,QAACC,KAAK,EAAEC,MAAM,EAAK;MACxBD,KAAK,CAACP,UAAU,GAAGQ,MAAM,CAACC,OAAO;IACrC,CAAC;IACDC,eAAe,EAAE,SAAAA,gBAACH,KAAK,EAAEC,MAAM,EAAK;MAChCD,KAAK,CAACN,YAAY,GAAGO,MAAM,CAACC,OAAO;IACvC,CAAC;IACDE,iBAAiB,EAAE,SAAAA,kBAACJ,KAAK,EAAEC,MAAM,EAAK;MAClCD,KAAK,CAACL,cAAc,GAAGM,MAAM,CAACC,OAAO;IACzC,CAAC;IACDG,OAAO,EAAE,SAAAA,QAACL,KAAK,EAAEC,MAAM,EAAK;MACxBD,KAAK,CAACJ,UAAU,GAAGK,MAAM,CAACC,OAAO;IACrC,CAAC;IACDI,YAAY,EAAE,SAAAA,aAACN,KAAK,EAAEC,MAAM,EAAK;MAC7BD,KAAK,CAACH,SAAS,GAAGI,MAAM,CAACC,OAAO;IACpC;EACJ;AACJ,CAAC,CAAC;AAEK,IAAAK,kBAAA,GAA8EjB,SAAS,CAACkB,OAAO;EAAvFT,OAAO,GAAAQ,kBAAA,CAAPR,OAAO;EAAEI,eAAe,GAAAI,kBAAA,CAAfJ,eAAe;EAAEC,iBAAiB,GAAAG,kBAAA,CAAjBH,iBAAiB;EAAEC,OAAO,GAAAE,kBAAA,CAAPF,OAAO;EAAEC,YAAY,GAAAC,kBAAA,CAAZD,YAAY;AAAsB,SAAAP,OAAA,EAAAI,eAAA,EAAAC,iBAAA,EAAAC,OAAA,EAAAC,YAAA;AAEvG,eAAehB,SAAS,CAACmB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}