{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar __ReactNativeView = require('react-native').View;\nvar __ReactNativeText = require('react-native').Text;\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useFonts } from \"expo-font\";\nimport { Button, Text, Theme } from 'tamagui';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function SongDetail() {\n  var _useFonts = useFonts({\n      Inter: require('@tamagui/font-inter/otf/Inter-Medium.otf'),\n      InterBold: require('@tamagui/font-inter/otf/Inter-Bold.otf')\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    loaded = _useFonts2[0];\n  var theme = useSelector(function (state) {\n    return state.theme.actual;\n  });\n  var isDark = theme === 'dark';\n  return loaded ? _jsx(View, {\n    style: styles.main,\n    children: _jsx(Theme, {\n      name: \"blue\",\n      children: _jsx(Button, {\n        iconAfter: _jsx(Icon, {\n          name: \"share-social-sharp\",\n          size: 30,\n          color: 'white'\n        }),\n        style: styles.button,\n        size: \"$1\",\n        theme: \"active\",\n        themeInverse: true,\n        children: _jsx(Text, {\n          style: {\n            color: 'white',\n            fontSize: 19\n          },\n          children: \"Compartir\"\n        })\n      })\n    })\n  }) : null;\n}\nvar styles = StyleSheet.create({\n  main: {\n    flex: 1,\n    flexGrow: 1\n  },\n  button: {\n    height: 60,\n    position: 'absolute',\n    bottom: 0,\n    width: \"100%\"\n  }\n});\nexport default SongDetail;","map":{"version":3,"names":["useFonts","Button","Text","Theme","useSelector","useDispatch","Icon","jsx","_jsx","SongDetail","_useFonts","Inter","require","InterBold","_useFonts2","_slicedToArray","loaded","theme","state","actual","isDark","View","style","styles","main","children","name","iconAfter","size","color","button","themeInverse","fontSize","StyleSheet","create","flex","flexGrow","height","position","bottom","width"],"sources":["/Users/juanfer14/Public/itunes-edamm/components/SongDetail.jsx"],"sourcesContent":["import { View, StyleSheet } from 'react-native'\n// Importo fonts para tamagui\nimport { useFonts } from \"expo-font\";\nimport { Button, Text, Theme } from 'tamagui'\n\n// Obtengo del store, el valor de theme\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Icon from 'react-native-vector-icons/Ionicons';\n\n\n\nexport function SongDetail(){\n    const [loaded] = useFonts({\n        Inter: require('@tamagui/font-inter/otf/Inter-Medium.otf'),\n        InterBold: require('@tamagui/font-inter/otf/Inter-Bold.otf'),\n    });\n\n    // El tema que actualmente esta siendo utilizado de la store\n    const theme = useSelector(state => state.theme.actual);\n    // Termino para saber si esta en modo dark o no.\n    const isDark = theme === 'dark';\n\n    return (\n        loaded ? \n            <View style={styles.main}>\n                <Theme name=\"blue\">\n                    <Button \n                        iconAfter={<Icon name=\"share-social-sharp\" size={30} color={'white'} />}\n                        style={styles.button}\n                        size=\"$1\"\n                        theme=\"active\"\n                        themeInverse\n                        \n                    >\n                        <Text style={{color: 'white', fontSize: 19}}>Compartir</Text>\n                    </Button>\n                </Theme>\n                \n            </View>\n        : null\n    )\n}\n\nconst styles = StyleSheet.create({\n    main: {\n        flex: 1,\n        flexGrow: 1\n    },\n    button: {\n        height: 60,\n        position: 'absolute',\n        bottom: 0,\n        width: \"100%\",   \n    }\n})\n\nexport default SongDetail;"],"mappings":";;;;;AAEA,SAASA,QAAQ,QAAQ,WAAW;AACpC,SAASC,MAAM,EAAEC,IAAI,EAAEC,KAAK,QAAQ,SAAS;AAG7C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,OAAOC,IAAI;AAA2C,SAAAC,GAAA,IAAAC,IAAA;AAItD,OAAO,SAASC,UAAUA,CAAA,EAAE;EACxB,IAAAC,SAAA,GAAiBV,QAAQ,CAAC;MACtBW,KAAK,EAAEC,OAAO,CAAC,0CAA0C,CAAC;MAC1DC,SAAS,EAAED,OAAO,CAAC,wCAAwC;IAC/D,CAAC,CAAC;IAAAE,UAAA,GAAAC,cAAA,CAAAL,SAAA;IAHKM,MAAM,GAAAF,UAAA;EAMb,IAAMG,KAAK,GAAGb,WAAW,CAAC,UAAAc,KAAK;IAAA,OAAIA,KAAK,CAACD,KAAK,CAACE,MAAM;EAAA,EAAC;EAEtD,IAAMC,MAAM,GAAGH,KAAK,KAAK,MAAM;EAE/B,OACID,MAAM,GACFR,IAAA,CAACa,IAAI;IAACC,KAAK,EAAEC,MAAM,CAACC,IAAK;IAAAC,QAAA,EACrBjB,IAAA,CAACL,KAAK;MAACuB,IAAI,EAAC,MAAM;MAAAD,QAAA,EACdjB,IAAA,CAACP,MAAM;QACH0B,SAAS,EAAEnB,IAAA,CAACF,IAAI;UAACoB,IAAI,EAAC,oBAAoB;UAACE,IAAI,EAAE,EAAG;UAACC,KAAK,EAAE;QAAQ,CAAE,CAAE;QACxEP,KAAK,EAAEC,MAAM,CAACO,MAAO;QACrBF,IAAI,EAAC,IAAI;QACTX,KAAK,EAAC,QAAQ;QACdc,YAAY;QAAAN,QAAA,EAGZjB,IAAA,CAACN,IAAI;UAACoB,KAAK,EAAE;YAACO,KAAK,EAAE,OAAO;YAAEG,QAAQ,EAAE;UAAE,CAAE;UAAAP,QAAA,EAAC;QAAS,CAAM;MAAC,CACzD;IAAC,CACN;EAAC,CAEN,CAAC,GACT,IAAI;AAEd;AAEA,IAAMF,MAAM,GAAGU,UAAU,CAACC,MAAM,CAAC;EAC7BV,IAAI,EAAE;IACFW,IAAI,EAAE,CAAC;IACPC,QAAQ,EAAE;EACd,CAAC;EACDN,MAAM,EAAE;IACJO,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAE,UAAU;IACpBC,MAAM,EAAE,CAAC;IACTC,KAAK,EAAE;EACX;AACJ,CAAC,CAAC;AAEF,eAAe/B,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}